/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2021-10-18 07:40:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.main._02;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class forecastRainfall_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:substring", org.apache.taglibs.standard.functions.Functions.class, "substring", new Class[] {java.lang.String.class, int.class, int.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1480903226000L));
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$('.menu_main li').eq(1).addClass(\"on\");\r\n");
      out.write("\t\r\n");
      out.write("\t/* \r\n");
      out.write("\tsetInterval(function() {\r\n");
      out.write("\t\tif($('#refreshOn').is(':checked')) {\r\n");
      out.write("\t\t\tdocument.location.href = '/flood/rainfall.do';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}, 1000 * 60);\r\n");
      out.write("\t */\r\n");
      out.write("\t\r\n");
      out.write("\thourpicker(\"input_hour\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar current_input_hour = $('#current_input_hour').val();\r\n");
      out.write("\t$('#input_hour').val(current_input_hour);\r\n");
      out.write("\t\r\n");
      out.write("\tdatepicker(\"input_issuestime\");\r\n");
      out.write("\tcurrentDateCheck(\"em_issuestime\");\r\n");
      out.write("\t\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 시간 계산 함수.(선택 시간, 계산 할 시간) return String ex)2021101010\r\n");
      out.write("function selectAddHourProc (issue_time, it) {\r\n");
      out.write("\tvar temp_date = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\t// 적용하고자 하는 시간이 있는 경우.\r\n");
      out.write("\tif(issue_time){\r\n");
      out.write("\t\tvar temp_year = issue_time.substr(0, 4);\r\n");
      out.write("\t\tvar temp_month = issue_time.substr(4, 2);\r\n");
      out.write("\t\tvar temp_day = issue_time.substr(6, 2);\r\n");
      out.write("\t\tvar temp_hour = issue_time.substr(8, 2);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\ttemp_date = new Date(temp_year, temp_month - 1, temp_day, temp_hour);\r\n");
      out.write("\t\t\r\n");
      out.write("\t// 적용하고자 하는 시간이 없는 경우 현재 시간.\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\ttemp_date = new Date();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 더하는 시간이 있는경우.\r\n");
      out.write("\tif(it){\r\n");
      out.write("\t\ttemp_date.setHours(temp_date.getHours() + parseInt(it));\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar new_year = temp_date.getFullYear();\r\n");
      out.write("\tvar new_month = temp_date.getMonth() + 1;\r\n");
      out.write("\tvar new_day = temp_date.getDate();\r\n");
      out.write("\tvar new_hour = temp_date.getHours();\r\n");
      out.write("\r\n");
      out.write("\tvar str_new_year   = new_year;\r\n");
      out.write("\tvar str_new_month  = (parseInt(new_month) < 10) ? \"0\" + new_month:new_month;\r\n");
      out.write("\tvar str_new_day    = (parseInt(new_day) < 10) ? \"0\" + new_day:new_day;\r\n");
      out.write("\tvar str_new_hour    = (parseInt(new_hour) < 10) ? \"0\" + new_hour:new_hour;\r\n");
      out.write("\t\r\n");
      out.write("\treturn \"\" + str_new_year + str_new_month + str_new_day + str_new_hour;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 날짜를 string으로 변환 후 표출.\r\n");
      out.write("function updateDateText(id, value) {\r\n");
      out.write("\t$(\"#\" + id).html(\"(\"+value.substr(0, 4) + \"년 \" + value.substr(4, 2) + \"월 \" + value.substr(6, 2) + \"일 \" + value.substr(8, 2) + \"시)\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 데이터 가져오기.\r\n");
      out.write("function selectData() {\r\n");
      out.write("\tvar issue_date = $('#issue_date').val();\r\n");
      out.write("\tvar current_input_hour = $('#current_input_hour').val();\r\n");
      out.write("\tvar yy = selectIssuetime().substr(0, 4);\r\n");
      out.write("\tvar mm = selectIssuetime().substr(4, 2);\r\n");
      out.write("\tvar dd = selectIssuetime().substr(6, 2);\r\n");
      out.write("\tvar hh = selectIssuehour();\r\n");
      out.write("\tvar h0m_value = selectAddHourProc (selectIssuetime()+selectIssuehour(), 0);\r\n");
      out.write("\tvar h1p_value = selectAddHourProc (h0m_value, 1);\r\n");
      out.write("\tvar h2p_value = selectAddHourProc (h1p_value, 1);\r\n");
      out.write("\tvar h3p_value = selectAddHourProc (h2p_value, 1);\r\n");
      out.write("\tvar now_value = selectAddHourProc ( \"\"+issue_date.substr(0, 4)+issue_date.substr(4, 2)+issue_date.substr(6, 2)+current_input_hour);\r\n");
      out.write("\tvar gu_arr = [\"남구\", \"달서구\", \"달성군\", \"동구\", \"북구\", \"서구\", \"수성구\", \"중구\", ];\r\n");
      out.write("\tvar html = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\tif(h0m_value > now_value){\r\n");
      out.write("\t\tselectNow();\r\n");
      out.write("\t\tcurrentDateCheck(\"em_issuestime\");\r\n");
      out.write("\t\talert(\"해당 시간을 선택 하실 수 없습니다.\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* \r\n");
      out.write("\t\t$(\".maparea img:eq(0)\").attr(\"src\", \"/images/nodata.png\");\r\n");
      out.write("\t\t$(\".maparea img:eq(1)\").attr(\"src\", \"/images/nodata.png\");\r\n");
      out.write("\t\t$(\".maparea img:eq(2)\").attr(\"src\", \"/images/nodata.png\");\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t return;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\".maparea img:eq(0)\").attr(\"src\", \"/images/img_map_434x307.gif\");\r\n");
      out.write("\t\t$(\".maparea img:eq(1)\").attr(\"src\", \"/images/img_map_434x307.gif\");\r\n");
      out.write("\t\t$(\".maparea img:eq(2)\").attr(\"src\", \"/images/img_map_434x307.gif\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tcurrentDateCheck(\"em_issuestime\");\r\n");
      out.write("\tupdateDateText(\"H1P\", h1p_value);\r\n");
      out.write("\tupdateDateText(\"H2P\", h2p_value);\r\n");
      out.write("\tupdateDateText(\"H3P\", h3p_value);\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfor(var i=0; i<gu_arr.length; i++) {\r\n");
      out.write("\t\tvar h2m = selectAddHourProc (h0m_value, -2) > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\tvar h1m = selectAddHourProc (h0m_value, -1) > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\tvar h0m = h0m_value > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\tvar h1p = h0m_value > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\tvar h2p = h0m_value > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\tvar h3p = h0m_value > now_value? \"-\":\"0.0\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\thtml += \"<tr>\";\r\n");
      out.write("\t\thtml += \"<td>\" + gu_arr[i] + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h2m + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h1m + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h0m + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h1p + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h2p + \"</td>\";\r\n");
      out.write("\t\thtml += \"<td>\" + h3p + \"</td>\";\r\n");
      out.write("\t\thtml += \"</tr>\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".tbody_data\").eq(0).html(html);\r\n");
      out.write("\t\r\n");
      out.write("\t/* \r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\turl: \"/floodCont/selectRainfallData.do\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tdata: {'dt': selectIssuetime() + '' + selectIssuehour() + '00'},\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\tvar html1 = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i<data.dataList.length; i++) {\r\n");
      out.write("\t\t\t\thtml += \"<tr>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].SSGNM + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H2M + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H1M + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H0M + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H1P + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H2P + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].H3P + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\".tbody_data\").eq(0).html(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar src = \"/ncl_images/aws_1hr/\" + yy  + \"/\" + mm + \"/\" + dd + \"/AWS_1HR_PRCP_\" + selectIssuetime() + '' + selectIssuehour() +\"_DAEGU.png\"\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#src').val(src);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('.cnt').html(\"<img id='check_img' src=\" + src + \"' onerror='javascript:selectCheckImage();'/ >\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t//th add 2021-08-23\r\n");
      out.write("\t\t\tfor(var i=0; i<data.stnList.length; i++) {\r\n");
      out.write("\t\t\t\tconsole.log(data.stnList[i].rnmm);\r\n");
      out.write("\t\t\t\tconsole.log(data.stnList[i].ssgnm);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t */\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectCheckImage(idx) {\r\n");
      out.write("\tvar image = document.getElementById('check_img');\r\n");
      out.write("\tvar src = $('#src').val();\r\n");
      out.write("\t\r\n");
      out.write("\t$('.no_data').hide();\r\n");
      out.write("\t$('.cnt').show();\r\n");
      out.write("\t\r\n");
      out.write("\t$('#check_img').attr('src', src);\r\n");
      out.write("\t\r\n");
      out.write("\timage.onerror = function () {\r\n");
      out.write("\t\t$('.no_data').show();\r\n");
      out.write("\t\t$('.cnt').hide();\r\n");
      out.write("\t};\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).on(\"change\", \"#input_hour\", function() {\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" method=\"get\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"current_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" id=\"issue_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" id=\"current_input_hour\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueHour}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" id=\"src\" />\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("    \t<div class=\"sett\">\r\n");
      out.write("          \t<strong>현재시각</strong>\r\n");
      out.write("          \t<em id=\"em_issuestime\"></em>\r\n");
      out.write("          \t<span>|</span>\r\n");
      out.write("          \t<strong>날짜 선택</strong>\r\n");
      out.write("          \t<input type=\"text\" id=\"input_issuestime\" name=\"\" value=\"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write('년');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write('월');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("일\"  onfocus=\"javascript:selectFocus(this);\" />\r\n");
      out.write("          \t<select id=\"input_hour\" name=\"\"></select>\r\n");
      out.write("          \t\r\n");
      out.write("          \t<a href=\"javascript:selectNow();\"><img src=\"/images/btn_now.gif\" alt=\"Now\" /></a>\r\n");
      out.write("          \t<!-- \r\n");
      out.write("          \t<div class=\"refreshOnOff\">\r\n");
      out.write("            \t<input name=\"refreshOnOff\" id=\"refreshOn\" value=\"on\" checked=\"\" type=\"radio\"><label for=\"refreshOn\">자동갱신 On</label>\r\n");
      out.write("            \t<input name=\"refreshOnOff\" id=\"refreshOff\" value=\"off\" type=\"radio\"><label for=\"refreshOff\">자동갱신 Off</label>\r\n");
      out.write("          \t</div>\r\n");
      out.write("          \t -->\r\n");
      out.write("    \t</div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"prdRnf\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <p><em>+1h</em><span id=\"H1P\">(2021년 10월 07일 15시)</span></p>\r\n");
      out.write("                    <div class=\"maparea\"><img src=\"/images/img_map_434x307.gif\" alt=\"\"/></div>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <p><em>+2h</em><span id=\"H2P\">(2021년 10월 07일 16시)</span></p>\r\n");
      out.write("                    <div class=\"maparea\"><img src=\"/images/img_map_434x307.gif\" alt=\"\"/></div>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <p><em>+3h</em><span id=\"H3P\">(2021년 10월 07일 17시)</span></p>\r\n");
      out.write("                    <div class=\"maparea\"><img src=\"/images/img_map_434x307.gif\" alt=\"\"/></div>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            <h3>자치구별 예측강우(mm/hr)</h3>\r\n");
      out.write("\t\t\t<div class=\"tblwrap\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<col width=\"*\" />\r\n");
      out.write("\t\t\t\t\t<col width=\"14%\" span=\"6\" />\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">구</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">-2h</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">-1h</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">0h</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">+1h</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">+2h</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th scope=\"col\">+3h</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody class=\"tbody_data\">\r\n");
      out.write("                    \t<tr><td>남구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>달서구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>달성군</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>동구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>북구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>서구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>수성구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    \t<tr><td>중구</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td></tr>\r\n");
      out.write("                    </tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("    \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/jsp/main/02/forecastRainfall.jsp(206,67) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 0, 4)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/jsp/main/02/forecastRainfall.jsp(206,119) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 4, 6)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/jsp/main/02/forecastRainfall.jsp(206,171) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 6, 8)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }
}
