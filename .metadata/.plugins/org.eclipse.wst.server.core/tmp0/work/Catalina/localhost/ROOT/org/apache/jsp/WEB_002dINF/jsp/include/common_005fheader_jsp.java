/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2021-10-18 07:40:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class common_005fheader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1480903226000L));
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ko\" lang=\"ko\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/common.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/jquery-ui.css\" />\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/plugin/jquery/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/plugin/jquery/jquery-ui-1.11.1.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/plugin/ol_3/ol.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/plugin/ol_3/proj4.js\"></script>\r\n");
      out.write("\t<script src=\"/js/plugin/highcharts/highcharts.js\"></script>\r\n");
      out.write("\t<script src=\"/js/plugin/highcharts/modules/exporting.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("    <title>도시홍수상황인지 플랫폼</title>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("\t\t.ol-popup {\r\n");
      out.write("\t\t    position: absolute;\r\n");
      out.write("\t\t    background-color: white;\r\n");
      out.write("\t\t    -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\r\n");
      out.write("\t\t    filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\r\n");
      out.write("\t\t    padding: 15px;\r\n");
      out.write("\t\t    border-radius: 10px;\r\n");
      out.write("\t\t    border: 1px solid #cccccc;\r\n");
      out.write("\t\t    bottom: 12px;\r\n");
      out.write("\t\t    left: -50px;\r\n");
      out.write("\t\t    min-width: 200px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.ol-popup:after, .ol-popup:before {\r\n");
      out.write("\t\t    top: 100%;\r\n");
      out.write("\t\t    border: solid transparent;\r\n");
      out.write("\t\t    content: \" \";\r\n");
      out.write("\t\t    height: 0;\r\n");
      out.write("\t\t    width: 0;\r\n");
      out.write("\t\t    position: absolute;\r\n");
      out.write("\t\t    pointer-events: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.ol-popup:after {\r\n");
      out.write("\t\t    border-top-color: white;\r\n");
      out.write("\t\t    border-width: 10px;\r\n");
      out.write("\t\t    left: 48px;\r\n");
      out.write("\t\t    margin-left: -10px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.ol-popup:before {\r\n");
      out.write("\t\t    border-top-color: #cccccc;\r\n");
      out.write("\t\t    border-width: 11px;\r\n");
      out.write("\t\t    left: 48px;\r\n");
      out.write("\t\t    margin-left: -11px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.ol-popup-closer {\r\n");
      out.write("\t\t  text-decoration: none;\r\n");
      out.write("\t\t  position: absolute;\r\n");
      out.write("\t\t  top: 2px;\r\n");
      out.write("\t\t  right: 8px;\r\n");
      out.write("\t\t}\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("    ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\tvar geoserver_path = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${geoserverPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t    \r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t$(\".gnb li\").hover(function() {\r\n");
      out.write("\t            $('ul:first', this).fadeIn(100);\r\n");
      out.write("\t        }, function() {\r\n");
      out.write("\t            $('ul:first', this).hide();\r\n");
      out.write("\t        });\r\n");
      out.write("\t        $(\".gnb ul>li:has(ul)>a\").each(function() {\r\n");
      out.write("\t            //$(this).html($(this).html() + ' &or;');\r\n");
      out.write("\t        \t$(this).html($(this).html());\r\n");
      out.write("\t        });\r\n");
      out.write("\t        \r\n");
      out.write("\t        if(window.location.pathname == '/dev/situation.do') {\r\n");
      out.write("\t        \t$('#p_situation').hide();\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        } else {\r\n");
      out.write("\t        \t$('#p_situation').show();\r\n");
      out.write("\t        }\r\n");
      out.write("\t        \r\n");
      out.write("\t        /*\r\n");
      out.write("\t        if($(location).attr(\"pathname\") == '/dev/situation.do') {\r\n");
      out.write("\t        \t$('.dimInfo').show();\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        } else {\r\n");
      out.write("\t        \t$('.dimInfo').hide();\r\n");
      out.write("\t        }\r\n");
      out.write("\t        */\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/component/common_gis.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/component/common.js\" ></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"wrap\">\r\n");
      out.write("\t    <div id=\"header\">\r\n");
      out.write("\t    \t<!--\r\n");
      out.write("\t\t\t<h1>\r\n");
      out.write("\t\t\t\t<a href=\"/flood/rainfall.do\"><img src=\"/images/logo.jpg\" alt=\"\" /></a>\r\n");
      out.write("\t        \t<a href=\"/flood/rainfall.do\"><img src=\"/images/logo.gif\" alt=\"\" /></a>\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t\t-->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<h1><a href=\"/flood/rainfall.do\"><img src=\"/images/logo.gif\" alt=\"\" /></a></h1>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"logout\"><a href=\"/userConn/userLogOut.do\" class=\"\">로그아웃</a></div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t      \t<h2 class=\"skip\">주메뉴</h2>\r\n");
      out.write("\t\t\t<ul class=\"menu_main\">\r\n");
      out.write("\t  \t\t\t<li><a href=\"/flood/rainfall.do\">강우실황</a></li>\r\n");
      out.write("\t  \t\t\t<li><a href=\"/flood/forecastRainfall.do\">예측강우</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/flood/floodLive.do\">1차원 홍수정보</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/flood/submersionInfo.do\">2차원 침수정보</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/flood/basinlevel.do\">수위실황</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/flood/floodMap.do\">홍수취약성 지도</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/flood/landSlide.do\">산사태예경보</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/jsp/include/common_header.jsp(65,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginUserGd}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t    <script type=\"text/javascript\">\r\n");
        out.write("\t\t\twindow.location = \"/userConn/userLogIn.do\";\r\n");
        out.write("\t\t</script>\r\n");
        out.write("\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
