/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2021-08-11 10:36:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.main._04;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class waterlevel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:substring", org.apache.taglibs.standard.functions.Functions.class, "substring", new Class[] {java.lang.String.class, int.class, int.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1480903226000L));
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$('.menu_main li').eq(3).addClass(\"on\");\r\n");
      out.write("\t\r\n");
      out.write("\thourpicker(\"input_hour\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar current_input_hour = $('#current_input_hour').val();\r\n");
      out.write("\t$('#input_hour').val(current_input_hour);\r\n");
      out.write("\t\r\n");
      out.write("\tdatepicker(\"input_issuestime\");\r\n");
      out.write("\tcurrentDateCheck(\"em_issuestime\");\r\n");
      out.write("\t\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function selectMinProc(issue_time, it) {\r\n");
      out.write("\tvar yy = issue_time.substr(0, 4);\r\n");
      out.write("\tvar mm = issue_time.substr(4, 2);\r\n");
      out.write("\tvar dd = issue_time.substr(6, 2);\r\n");
      out.write("\tvar hh = issue_time.substr(8, 2);\r\n");
      out.write("\tvar mi = issue_time.substr(10, 2);\r\n");
      out.write("\tvar ds = yy + '/' + mm + '/' + dd + ' ' + hh + ':' + mi + ':00';\r\n");
      out.write("\tvar temp_date = new Date(ds);\r\n");
      out.write("\r\n");
      out.write("\ttemp_date.setMinutes(temp_date.getMinutes() + parseInt(it));\r\n");
      out.write("\r\n");
      out.write("\tvar new_yy = temp_date.getFullYear();\r\n");
      out.write("\tvar new_mm = temp_date.getMonth() + 1;\r\n");
      out.write("\tvar new_dd = temp_date.getDate();\r\n");
      out.write("\tvar new_hh = temp_date.getHours();\r\n");
      out.write("\tvar new_mi = temp_date.getMinutes();\r\n");
      out.write("\r\n");
      out.write("\tvar str_new_yy = new_yy;\r\n");
      out.write("\tvar str_new_mm = (parseInt(new_mm) < 10) ? \"0\" + new_mm:new_mm;\r\n");
      out.write("\tvar str_new_dd = (parseInt(new_dd) < 10) ? \"0\" + new_dd:new_dd;\r\n");
      out.write("\tvar str_new_hh = (parseInt(new_hh) < 10) ? \"0\" + new_hh:new_hh;\r\n");
      out.write("\tvar str_new_mi = (parseInt(new_mi) < 10) ? \"0\" + new_mi:new_mi;\r\n");
      out.write("\t\r\n");
      out.write("\treturn \"\" + str_new_yy + str_new_mm + str_new_dd + str_new_hh + str_new_mi;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectData() {\r\n");
      out.write("\tvar input_issuestime = selectIssuetime();\r\n");
      out.write("\tvar input_hour = selectIssuehour();\r\n");
      out.write("\t\r\n");
      out.write("\t//var yy = input_issuestime.substr(0, 4);\r\n");
      out.write("\t//var mm = input_issuestime.substr(4, 2);\r\n");
      out.write("\t//var dd = input_issuestime.substr(6, 2);\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\turl: \"/floodCont/selectWaterLevelData.do\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tdata: {'dt': input_issuestime + \"\" + input_hour, 'gid': '220300001'},\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\tvar dt = \"\";\r\n");
      out.write("\t\t\tvar wl = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar xaxis = new Array();\r\n");
      out.write("\t\t\tvar val = new Array();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar yy = data.dt24H.substr(0, 4);\r\n");
      out.write("\t\t\tvar mm = data.dt24H.substr(4, 2);\r\n");
      out.write("\t\t\tvar dd = data.dt24H.substr(6, 2);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i<= 144; i++) {\r\n");
      out.write("\t\t\t\tdt = selectMinProc(data.dt24H, i*10);\r\n");
      out.write("\t\t\t\tat = dt.substr(4, 2) + \"-\" + dt.substr(6, 2) + \"<br/> \" + dt.substr(8, 2) + \":\" + dt.substr(10, 2);\r\n");
      out.write("\t\t\t\tbt = dt.substr(0, 4) + \"-\" + dt.substr(4, 2) + \"-\" + dt.substr(6, 2) + \" \" + dt.substr(8, 2) + \":\" + dt.substr(10, 2);\r\n");
      out.write("\t\t\t\t/*\r\n");
      out.write("\t\t\t\tif(i * 10 < 10) {\r\n");
      out.write("\t\t\t\t\tdt = \"0\" + i\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tdt = i * 10;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\txaxis.push(at);\r\n");
      out.write("\t\t\t\tval.push('');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfor(var j=0; j<data.dataList.length; j++) {\r\n");
      out.write("\t\t\t\t\tif(dt == data.dataList[j].OBSTM) val[i] = data.dataList[j].WL;\r\n");
      out.write("\t\t\t\t} \t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\thtml += \"<tr>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + bt + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + selectDataCheck(val[i]) + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>-</td>\";\r\n");
      out.write("\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//console.log(xaxis);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('.tbody_data').eq(0).html(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#chart_data\").highcharts({\r\n");
      out.write("\t\t\t    chart: {\r\n");
      out.write("\t\t\t        type: \"line\"\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    title: {\r\n");
      out.write("\t\t\t    \ttext : null\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    xAxis: {\r\n");
      out.write("\t\t\t    \ttitle: {\r\n");
      out.write("\t\t\t            text: '시간(10분)'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        tickInterval : 24,\r\n");
      out.write("\t\t\t        categories: xaxis\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    plotOptions: {\r\n");
      out.write("\t\t\t        series: {\r\n");
      out.write("\t\t\t            animation: false,\r\n");
      out.write("\t\t\t            marker: {\r\n");
      out.write("\t\t\t                enabled: false\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    credits: {\r\n");
      out.write("\t\t            enabled: false\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t\t    yAxis: [{\r\n");
      out.write("\t\t\t        title: {\r\n");
      out.write("\t\t\t        \ttext: '수위(cm)'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        labels: {\r\n");
      out.write("\t\t\t            format: '{value:,.2f}'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        lineWidth: 1\r\n");
      out.write("\t\t\t    }],\r\n");
      out.write("\t\t\t    series: [{\r\n");
      out.write("\t\t\t        name: '수위',\r\n");
      out.write("\t\t\t        data: val\r\n");
      out.write("\t\t\t    }],\r\n");
      out.write("\t\t\t    legend: {\r\n");
      out.write("\t\t\t        enabled: false\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t\texporting : {\r\n");
      out.write("\t\t\t\t\tenabled : false,\r\n");
      out.write("\t\t\t\t\tsourceWidth : 1100,\r\n");
      out.write("\t\t\t\t\tsourceHeight : 250,\r\n");
      out.write("\t\t\t\t\tscale : 1\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t        \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectDataCheck(val) {\r\n");
      out.write("\tvar result = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\tif(val != '0' && val == '') {\r\n");
      out.write("\t\tresult = \"-\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tresult = val.toFixed(1);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\treturn result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).on('change', '#input_hour', function() {\r\n");
      out.write("\tcurrentDateCheck(\"em_issuestime\");\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" method=\"get\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"current_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" id=\"issue_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" id=\"current_input_hour\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueHour}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"container\" class=\"wtrLvl\">\r\n");
      out.write("\t\t<div class=\"submenu\">\r\n");
      out.write("            <a href=\"/flood/basinlevel.do\">하천수위실황</a>\r\n");
      out.write("            <a href=\"/flood/waterlevel.do\" class=\"on\">우수관로실황</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("    \t<div class=\"sett\">\r\n");
      out.write("\t\t\t<strong>현재시각</strong>\r\n");
      out.write("          \t<em id=\"em_issuestime\"></em>\r\n");
      out.write("          \t<span>|</span>\r\n");
      out.write("          \t<strong>날짜 선택</strong>\r\n");
      out.write("          \t<input type=\"text\" id=\"input_issuestime\" name=\"\" value=\"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write('년');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write('월');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("일\"  onfocus=\"javascript:selectFocus(this);\" />\r\n");
      out.write("          \t<select id=\"input_hour\" name=\"\"></select>\r\n");
      out.write("          \t\r\n");
      out.write("          \t<a href=\"javascript:selectNow();\"><img src=\"/images/btn_now.gif\" alt=\"Now\" /></a>\r\n");
      out.write("          \t\r\n");
      out.write("          \t<!--  \r\n");
      out.write("          \t<div class=\"sltWrap\">\r\n");
      out.write("\t            <select>\r\n");
      out.write("\t              <option value=\"\">지구</option>\r\n");
      out.write("\t            </select>\r\n");
      out.write("\t            <select name=\"\">\r\n");
      out.write("\t              <option value=\"\">지점?</option>\r\n");
      out.write("\t            </select>\r\n");
      out.write("          \t</div>\r\n");
      out.write("          \t-->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("        <div class=\"ltWd\">\r\n");
      out.write("          \t<div class=\"crtwrap\">\r\n");
      out.write("            <div class=\"cnt\" id=\"chart_data\"><!-- <img src=\"/images/waterdepth.gif\" alt=\"\" /> --></div>\r\n");
      out.write("            <ul class=\"legend\">\r\n");
      out.write("              \t<li>안전</li>\r\n");
      out.write("              \t<li>관심</li>\r\n");
      out.write("              \t<li>주의</li>\r\n");
      out.write("              \t<li>경계</li>\r\n");
      out.write("              \t<li>심각</li>\r\n");
      out.write("            </ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"tblwrap\">\r\n");
      out.write("            <div class=\"thead\">\r\n");
      out.write("                <table>\r\n");
      out.write("                    <col width=\"120px\" />\r\n");
      out.write("                    <col width=\"70px\" />\r\n");
      out.write("                    <col width=\"*\" />\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td scope=\"col\">시간</td>\r\n");
      out.write("                        <td scope=\"col\">수위</td>\r\n");
      out.write("                        <td scope=\"col\">예경보</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"scroll\">\r\n");
      out.write("                <table>\r\n");
      out.write("\r\n");
      out.write("                <col width=\"120px\" />\r\n");
      out.write("                <col width=\"70px\" />\r\n");
      out.write("                <col width=\"*\" />\r\n");
      out.write("              \t<tbody class=\"tbody_data\">\r\n");
      out.write("              \t\t<!-- \r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>현시점</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2019. 00.00 13:00</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                  \t<td>0.0</td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                 -->\r\n");
      out.write("              \t</tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"rtWd\">\r\n");
      out.write("        \t<h3>관측지점 및 수위계측기 정보</h3> <!-- h3 텍스트 변경 -->\r\n");
      out.write("        \t<div class=\"maplink\"><img width=\"330\" src=\"/images/waterlevel01.png\" alt=\"\" /></div>\r\n");
      out.write("            <dl class=\"detail\">\r\n");
      out.write("                <dt class=\"captn\">시범 대상지역에 설치한 초음파 수위계측기 사양</dt>\r\n");
      out.write("                <dd class=\"list\">\r\n");
      out.write("                    <ul>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>모델</dt>\r\n");
      out.write("                                <dd>LT-200</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>측정방식</dt>\r\n");
      out.write("                                <dd>초음파펄스반사방식</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>측정정도</dt>\r\n");
      out.write("                                <dd>±0.20%</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>측정범위</dt>\r\n");
      out.write("                                <dd>0.30~20m, 0.60~30m</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>측정주기</dt>\r\n");
      out.write("                                <dd>5~10회 /sec</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>측정정도</dt>\r\n");
      out.write("                                <dd>±0.20%</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>제어방식</dt>\r\n");
      out.write("                                <dd>CPU 제어방식</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>기능</dt>\r\n");
      out.write("                                <dd>자기진단기능, 액정밝기 조정기능, 전류출력 확인가능(출력 이상유무 LED 확인)</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>조작</dt>\r\n");
      out.write("                                <dd>6KEY  (UP, DOWN, RIGHT, LEFT, MENU, ESC)</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <dl>\r\n");
      out.write("                                <dt>동작온도</dt>\r\n");
      out.write("                                <dd>-30 ~ +85℃</dd>\r\n");
      out.write("                            </dl>\r\n");
      out.write("                        </li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </dd>\r\n");
      out.write("            </dl>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/jsp/main/04/waterlevel.jsp(194,67) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 0, 4)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/jsp/main/04/waterlevel.jsp(194,119) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 4, 6)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/jsp/main/04/waterlevel.jsp(194,171) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 6, 8)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }
}
