/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2020-08-24 08:15:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.main._05;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class floodMap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1480903226000L));
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var map = \"\";\r\n");
      out.write("var overlay = \"\";\r\n");
      out.write("var risk_daegu_layer =\"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$('.menu_main li').eq(4).addClass(\"on\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar container = document.getElementById('popup');\r\n");
      out.write("\tvar content = document.getElementById('popup-content');\r\n");
      out.write("\tvar overlay = new ol.Overlay(({element: container}));\r\n");
      out.write("\t\r\n");
      out.write("\tmap = new ol.Map({\r\n");
      out.write("\t    logo: false,\r\n");
      out.write("\t    target: 'map',\r\n");
      out.write("\t    overlays: [overlay],\r\n");
      out.write("\t    layers: [new ol.layer.Tile({source: new ol.source.OSM()})],\r\n");
      out.write("\t    view: new ol.View({\r\n");
      out.write("\t        projection : global_projection,\r\n");
      out.write("\t        center: [128.5992834, 35.891653],\r\n");
      out.write("\t        zoom: 11.4 //9.2\r\n");
      out.write("\t    })\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\trisk_daegu_layer = new ol.layer.Tile({\r\n");
      out.write("\t    source: new ol.source.TileWMS({\r\n");
      out.write("\t    \t//url: 'http://geornd.hecorea.co.kr/smartuf/wms?service=WMS&version=1.1.0&request=GetMap&layers=smartuf:flood_risk_new&styles=&bbox=332697.06018891523,253965.85974026026,359162.217542953,281168.51733306004&width=747&height=768&srs=EPSG:2097&format=image%2Fpng',\r\n");
      out.write("\t    \turl: 'http://geornd.hecorea.co.kr/smartuf/wms',\r\n");
      out.write("\t    \tparams: {\r\n");
      out.write("\t            'LAYERS': 'smartuf:flood_risk_new'\r\n");
      out.write("\t        },\r\n");
      out.write("\t        opaque: false,\r\n");
      out.write("\t        serverType: 'geoserver',\r\n");
      out.write("\t        crossOrigin : 'anonymous'\r\n");
      out.write("\t    })\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tvar basin_line = new ol.layer.Image({\r\n");
      out.write("\t    source: new ol.source.ImageVector({\r\n");
      out.write("\t        source: new ol.source.Vector({\r\n");
      out.write("\t            url: 'http://geornd.hecorea.co.kr/smartuf' + '/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=smartuf:flood_risk_new_01&maxFeatures=50&outputFormat=application%2Fjson',\r\n");
      out.write("\t            format: new ol.format.GeoJSON()\r\n");
      out.write("\t        }),\r\n");
      out.write("\t        style: new ol.style.Style({\r\n");
      out.write("\t            stroke: new ol.style.Stroke({\r\n");
      out.write("\t                color: '#808080',\r\n");
      out.write("\t                width: 0.3\r\n");
      out.write("\t            })\r\n");
      out.write("\t        })\r\n");
      out.write("\t    })\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//map.addLayer(layer_google_base);\r\n");
      out.write("\tmap.addLayer(risk_daegu_layer);\r\n");
      out.write("\tmap.addLayer(basin_line);\r\n");
      out.write("\t//layer_google_base.setZIndex(1);\r\n");
      out.write("\t//risk_daegu_layer.setZIndex(11);\r\n");
      out.write("\t//risk_daegu_layer.setZIndex(1);\r\n");
      out.write("\t//basin_line.setZIndex(11);\r\n");
      out.write("\t\r\n");
      out.write("\tmap.on('pointermove', function (evt) {\r\n");
      out.write("    \tif (evt.dragging) return;\r\n");
      out.write("\t    \r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("\t    var pixel = map.getEventPixel(evt.originalEvent);\r\n");
      out.write("\t    var coordinate = evt.coordinate;\r\n");
      out.write("\t    var target = map.getTarget();\r\n");
      out.write("    \tvar jTarget = typeof target == \"string\" ? $(\"#\" + target) : $(target);\r\n");
      out.write("    \t\r\n");
      out.write("\t    var feature = map.forEachFeatureAtPixel(pixel, function(feature) {\r\n");
      out.write("            return feature;\r\n");
      out.write("        });\r\n");
      out.write("\t    /*\r\n");
      out.write("\t    var url = risk_daegu_layer.getFeatureInfoUrl(\r\n");
      out.write("\t    \t    evt.coordinate, viewResolution, 'EPSG:2097',\r\n");
      out.write("\t    \t    {'INFO_FORMAT': 'text/html'});\r\n");
      out.write("\t    */\r\n");
      out.write("\t    \r\n");
      out.write("\t    var html = \"\";\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(feature) {\r\n");
      out.write("\t    \tjTarget.css(\"cursor\", \"pointer\");\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    \tconsole.log(feature);\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    \t/*\r\n");
      out.write("\t    \tif(typeof feature.H.id != 'undefined') {\r\n");
      out.write("\t    \t\tjTarget.css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t   \t\t\thtml +=  \"맨홀 : \" + feature.H.id + \"<br />\";\r\n");
      out.write("\t   \t\t\t\r\n");
      out.write("\t\t    \tcontent.innerHTML = html;\r\n");
      out.write("\t            overlay.setPosition(coordinate);\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \t*/\r\n");
      out.write("            \r\n");
      out.write("\t    } else {\r\n");
      out.write("\t    \tjTarget.css(\"cursor\", \"default\");\r\n");
      out.write("\t    \toverlay.setPosition(undefined);\r\n");
      out.write("\t    }\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("\tmap.on('singleclick', function (evt) {\r\n");
      out.write("\t\tif (evt.dragging) return;\r\n");
      out.write("\t    \r\n");
      out.write("\t    var pixel = map.getEventPixel(evt.originalEvent);\r\n");
      out.write("\t    var target = map.getTarget();\r\n");
      out.write("    \tvar jTarget = typeof target === \"string\" ? $(\"#\" + target) : $(target);\r\n");
      out.write("\t    \r\n");
      out.write("\t    var feature = map.forEachFeatureAtPixel(pixel, function(feature) {\r\n");
      out.write("            return feature;\r\n");
      out.write("        });\r\n");
      out.write("\t    \r\n");
      out.write("\t    console.log('singleclick');\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(feature) {\r\n");
      out.write("\t\t\tconsole.log(feature);\r\n");
      out.write("            \r\n");
      out.write("\t    } else {\r\n");
      out.write("\t    \tjTarget.css(\"cursor\", \"default\");\r\n");
      out.write("\t    }\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function selectData() {\r\n");
      out.write("\t\r\n");
      out.write("\t //map.addLayer(risk_daegu_layer);\r\n");
      out.write("\t \r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\turl: \"/floodCont/selectFloodMapData.do\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i<data.dataList.length; i++) {\r\n");
      out.write("\t\t\t\thtml += \"<tr>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].ANALYSIS_RANK +  \"순위</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].ADM_NM + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].RSI + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].DPI + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + data.dataList[i].FVI + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t} \t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('.tbody_data').eq(0).html(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" method=\"get\">\r\n");
      out.write("\t<div id=\"container\" class=\"fldVln\">\r\n");
      out.write("        <h3>행정단위별 홍수취약성 지수</h3>\r\n");
      out.write("        <div class=\"ltWd\">\r\n");
      out.write("          \t<div class=\"cnt\" id=\"map\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"rtWd\">\r\n");
      out.write("          \t<h3>홍수취약성 상세정보</h3>\r\n");
      out.write("          \t<div class=\"tblwrap\">\r\n");
      out.write("                <div class=\"thead\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <col width=\"55px\" />\r\n");
      out.write("                        <col width=\"88px\" />\r\n");
      out.write("                        <col width=\"60px\" span=\"2\" />\r\n");
      out.write("                        <col width=\"*\" />\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td scope=\"col\">구분</td>\r\n");
      out.write("                            <td scope=\"col\">기초단위구역</td>\r\n");
      out.write("                            <td scope=\"col\">RSI</td>\r\n");
      out.write("                            <td scope=\"col\">DPI</td>\r\n");
      out.write("                            <td scope=\"col\">FVI</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"scroll\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <col width=\"55px\" />\r\n");
      out.write("                        <col width=\"88px\" />\r\n");
      out.write("                        <col width=\"60px\" span=\"2\" />\r\n");
      out.write("                        <col width=\"*\" />\r\n");
      out.write("              \t<tbody class=\"tbody_data\">\r\n");
      out.write("              \t\t<!--  \r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>1순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>2순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>3순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>4순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>5순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>6순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>7순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>8순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>9순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>10순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>11순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>12순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>13순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>14순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                  \t<td>15순위</td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                  \t<td></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                -->\r\n");
      out.write("              \t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <img src=\"/images/fldVln_legend.gif\" alt=\"\" class=\"legend\" />\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
