/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2022-09-13 03:45:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.main._05;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class basinlevel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:substring", org.apache.taglibs.standard.functions.Functions.class, "substring", new Class[] {java.lang.String.class, int.class, int.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1480903226000L));
    _jspx_dependants.put("jar:file:/C:/workspace/eclipse_workspace/hecorea/SMARTUF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SMARTUF/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var node = \"DS3000\";\r\n");
      out.write("var current_stn_cd = \"2011696\"; \r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$('.menu_main li').eq(4).addClass(\"on\");\r\n");
      out.write("\t\r\n");
      out.write("\tdatepicker(\"input_issuestime\");\r\n");
      out.write("\thourpicker(\"input_hour\");\r\n");
      out.write("\tminpicker(\"input_min\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar current_input_hour = $('#current_input_hour').val();\r\n");
      out.write("\t$('#input_hour').val(current_input_hour);\r\n");
      out.write("\t\r\n");
      out.write("\tvar current_input_min = parseInt($('#current_input_min').val()) * 10;\r\n");
      out.write("\tif(current_input_min == 0) {\r\n");
      out.write("\t\t$('#input_min').val('0' + current_input_min);\r\n");
      out.write("\t\t\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\t$('#input_min').val('' + current_input_min);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar container = document.getElementById('popup');\r\n");
      out.write("\tvar content = document.getElementById('popup-content');\r\n");
      out.write("\tvar overlay = new ol.Overlay(({element: container}));\r\n");
      out.write("\tvar overlay = new ol.Overlay(({element: container}));\r\n");
      out.write("\t\r\n");
      out.write("\tmap = new ol.Map({\r\n");
      out.write("\t    logo: false,\r\n");
      out.write("\t    target: 'map',\r\n");
      out.write("\t    controls: [],\r\n");
      out.write("\t    overlays: [overlay],\r\n");
      out.write("\t    layers: [new ol.layer.Tile({source: new ol.source.OSM()}), layer_dg_node, node_layer, marker_layer],\r\n");
      out.write("\t    view: new ol.View({\r\n");
      out.write("\t        projection : global_projection,\r\n");
      out.write("\t        center: [128.5724234, 35.807651], //126.62, 36.33 35.891653,128.5724234\r\n");
      out.write("\t        zoom: 11.0 //9.2\r\n");
      out.write("\t    })\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tmap.on('pointermove', function (evt) {\r\n");
      out.write("    \tif (evt.dragging) return;\r\n");
      out.write("\t    \r\n");
      out.write("\t    var pixel = map.getEventPixel(evt.originalEvent);\r\n");
      out.write("\t    var coordinate = evt.coordinate;\r\n");
      out.write("\t    var target = map.getTarget();\r\n");
      out.write("    \tvar jTarget = typeof target == \"string\" ? $(\"#\" + target) : $(target);\r\n");
      out.write("\t    \r\n");
      out.write("\t    var feature = map.forEachFeatureAtPixel(pixel, function(feature) {\r\n");
      out.write("            return feature;\r\n");
      out.write("        });\r\n");
      out.write("\t    \r\n");
      out.write("\t    var html = \"\";\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(feature) {\r\n");
      out.write("\t    \tif(typeof feature.H.params.wlobscd != 'undefined') {\r\n");
      out.write("\t    \t\tjTarget.css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t    \t\thtml += \"<table border='1'>\"\r\n");
      out.write("\t    \t\thtml +=  \"<tr><td>관측소명</td><td>\" + feature.H.params.obsnm + \"</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td>관측소코드</td><td>\" + feature.H.params.wlobscd + \"</td></tr>\";\r\n");
      out.write("\t   \t\t\t\r\n");
      out.write("\t   \t\t\tif(feature.H.params.wl == '-999') {\r\n");
      out.write("\t   \t\t\t\thtml +=  \"<tr><td>수위</td><td>자료없음</td></tr>\";\r\n");
      out.write("\t   \t\t\t} else {\r\n");
      out.write("\t   \t\t\t\thtml +=  \"<tr><td>수위</td><td>\" + feature.H.params.wl + \"El.m</td></tr>\";\r\n");
      out.write("\t   \t\t\t}\r\n");
      out.write("\t   \t\t\t\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td style='color: #1fbc02'>안전</td><td>\" + feature.H.params.lv1 + \"↓</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td style='color: #00B7EE'>관심</td><td>\" + feature.H.params.lv1 + \"~\" + feature.H.params.lv2 + \"</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td style='color: #CBC100'>주의</td><td>\" + feature.H.params.lv2 + \"~\" + feature.H.params.lv3 + \"</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td style='color: #BA0469'>경계</td><td>\" + feature.H.params.lv3 + \"~\" + feature.H.params.lv4 + \"</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml +=  \"<tr><td style='color: #D80012'>심각</td><td>\" + feature.H.params.lv4 + \"↑</td></tr>\";\r\n");
      out.write("\t   \t\t\thtml += \"</table>\"\r\n");
      out.write("\t   \t\t\t\r\n");
      out.write("\t\t    \tcontent.innerHTML = html;\r\n");
      out.write("\t            overlay.setPosition(coordinate);\r\n");
      out.write("\t    \t}\r\n");
      out.write("            \r\n");
      out.write("\t    } else {\r\n");
      out.write("\t    \tjTarget.css(\"cursor\", \"default\");\r\n");
      out.write("\t    \toverlay.setPosition(undefined);\r\n");
      out.write("\t    }\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("\tmap.on('singleclick', function (evt) {\r\n");
      out.write("\t\tif (evt.dragging) return;\r\n");
      out.write("\t    \r\n");
      out.write("\t    var pixel = map.getEventPixel(evt.originalEvent);\r\n");
      out.write("\t    var target = map.getTarget();\r\n");
      out.write("    \tvar jTarget = typeof target === \"string\" ? $(\"#\" + target) : $(target);\r\n");
      out.write("\t    \r\n");
      out.write("\t    var feature = map.forEachFeatureAtPixel(pixel, function(feature) {\r\n");
      out.write("            return feature;\r\n");
      out.write("        });\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(feature) {\r\n");
      out.write("\t    \tif(typeof feature.H.params.wlobscd != 'undefined') {\r\n");
      out.write("\t\t    \tjTarget.css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \tselectDetail(feature.H.params.wlobscd);\r\n");
      out.write("\t\t    \tsetMapMarker(feature.H.params.wlobscd, feature.H.params.lon, feature.H.params.lat);\r\n");
      out.write("\t            \r\n");
      out.write("\t\t    } else {\r\n");
      out.write("\t\t    \tjTarget.css(\"cursor\", \"default\");\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t    }\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("\tselectData();\r\n");
      out.write("\tsetMapMarker('2011696', '128.4653', '35.8392');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function setMapMarker(id, lon, lat) {\r\n");
      out.write("\tvar geom_trans = ([lon, lat]);\r\n");
      out.write("\tvar geom = new ol.geom.Point(geom_trans);\r\n");
      out.write("\t\r\n");
      out.write("\tmarker_layer.getSource().clear();\r\n");
      out.write("\t\r\n");
      out.write("\tvar node = new ol.Feature({\r\n");
      out.write("        id : id,\r\n");
      out.write("        params: {\r\n");
      out.write("            'lat': lat,\r\n");
      out.write("            'lon': lon\r\n");
      out.write("        }\r\n");
      out.write("   \t});\r\n");
      out.write("\t\r\n");
      out.write("\t//console.log(\"aaa\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar ls_stn_style = new ol.style.Style({\r\n");
      out.write("\t    image: new ol.style.Icon(({\r\n");
      out.write("\t    \tanchor: [0.5, 32],\r\n");
      out.write("\t        anchorXUnits: 'fraction',\r\n");
      out.write("\t        anchorYUnits: 'pixels',\r\n");
      out.write("\t        src: '/images/marker_stn.gif'\r\n");
      out.write("\t    }))\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tnode.setGeometry(geom);\r\n");
      out.write("\tnode.setStyle(ls_stn_style);\r\n");
      out.write("\t\r\n");
      out.write("\tmarker_layer.getSource().addFeature(node);\r\n");
      out.write("\tmarker_layer.setZIndex(1);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function selectData() {\r\n");
      out.write("\tvar yy = selectIssuetime().substr(0, 4);\r\n");
      out.write("\tvar mm = selectIssuetime().substr(4, 2);\r\n");
      out.write("\tvar dd = selectIssuetime().substr(6, 2);\r\n");
      out.write("\t\r\n");
      out.write("\tnode_layer.getSource().clear();\r\n");
      out.write("\t\r\n");
      out.write("\t//console.log(selectIssuetime() + '' + selectIssuehour() + '' + selectIssuemin());\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\turl: \"/floodCont/selectBasinLevelData.do\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tdata: {'dt': selectIssuetime() + '' + selectIssuehour() + '' + selectIssuemin()},\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\tvar color = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#kma_txt').html(data.resultText);\r\n");
      out.write("\t\t\t$('#image_path').attr('src', data.resultFile);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i<data.dataList.length; i++) {\r\n");
      out.write("\t\t\t\tvar geom_trans = ([data.dataList[i].LON, data.dataList[i].LAT]);\r\n");
      out.write("\t\t\t\tvar geom = new ol.geom.Point(geom_trans);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar wl = parseFloat(data.dataList[i].WL);\r\n");
      out.write("\t\t\t\tvar wl_name = '';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(wl == '-999') {\r\n");
      out.write("\t\t\t\t\twl_name = \"자료없음\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\twl_name = wl + 'El.m';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar lv1 = parseFloat(data.dataList[i].LV1);\r\n");
      out.write("\t\t\t\tvar lv2 = parseFloat(data.dataList[i].LV2);\r\n");
      out.write("\t\t\t\tvar lv3 = parseFloat(data.dataList[i].LV3);\r\n");
      out.write("\t\t\t\tvar lv4 = parseFloat(data.dataList[i].LV4);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar node = new ol.Feature({\r\n");
      out.write("\t    \t         id : data.dataList[i].NODE,\r\n");
      out.write("\t    \t         params: {\r\n");
      out.write("\t    \t        \t 'wlobscd': data.dataList[i].WLOBSCD,\r\n");
      out.write("\t    \t        \t 'obsnm': data.dataList[i].WLOBSNM,\r\n");
      out.write("\t                     'lat': data.dataList[i].LAT,\r\n");
      out.write("\t                     'lon': data.dataList[i].LON,\r\n");
      out.write("\t                     'wl': wl,\r\n");
      out.write("\t                     'lv1': lv1.toFixed(1),\r\n");
      out.write("\t                     'lv2': lv2.toFixed(1),\r\n");
      out.write("\t                     'lv3': lv3.toFixed(1),\r\n");
      out.write("\t                     'lv4': lv4.toFixed(1)\r\n");
      out.write("\t                 }\r\n");
      out.write("\t    \t    });\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar current_grade = '';\r\n");
      out.write("\t\t\t\tvar legend_class = '';\r\n");
      out.write("\t\t\t\tvar legend_name = '';\r\n");
      out.write("\t\t\t\tvar current_color = '';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(wl == '-999') {\r\n");
      out.write("\t\t\t\t\tcurrent_grade = 'lv-1';\r\n");
      out.write("\t\t\t\t\tlegend_class = 'legend1';\r\n");
      out.write("\t\t\t\t\tlegend_name = '자료없음';\r\n");
      out.write("\t\t\t\t\tcurrent_color = '#777777';\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif(wl < lv2 && wl >= lv1) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv1';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend2';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '관심';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#00B7EE';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl < lv3 && wl >= lv2) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv2';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend3';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '주의';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#ffff00';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl < lv4 && wl >= lv3) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv3';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend4';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '경계';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#BA0469';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl >= lv4) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv4';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend5';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '심각';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#D80012';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}  else {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv0';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend1';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '안전';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#1fbc02';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tvar ls_stn_style = new ol.style.Style({\r\n");
      out.write("\t\t\t\t\timage: new ol.style.Circle({\r\n");
      out.write("\t\t\t\t\t    radius: 10,\r\n");
      out.write("\t\t\t\t\t    stroke: new ol.style.Stroke({\r\n");
      out.write("\t\t\t\t\t      color: '#000000',\r\n");
      out.write("\t\t\t\t    \t  width: 2\r\n");
      out.write("\t\t\t\t\t    }),\r\n");
      out.write("\t\t\t\t\t    fill: new ol.style.Fill({\r\n");
      out.write("\t\t\t\t\t      color: current_color\r\n");
      out.write("\t\t\t\t\t    })\r\n");
      out.write("\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t    text: new ol.style.Text({\r\n");
      out.write("\t\t\t\t        text: data.dataList[i].WLOBSNM + \"(\" + wl_name + \")\",\r\n");
      out.write("\t\t\t    \t\tfont: 'bold, \"NanumBarunGothic\"',\r\n");
      out.write("\t\t\t\t        scale: 1.3,\r\n");
      out.write("\t\t\t\t        fill: new ol.style.Fill({\r\n");
      out.write("\t\t\t\t          color: '#000000'\r\n");
      out.write("\t\t\t\t        }),\r\n");
      out.write("\t\t\t\t        stroke: new ol.style.Stroke({\r\n");
      out.write("\t\t\t\t          color: '#FFFFFF',\r\n");
      out.write("\t\t\t\t          width: 3.0\r\n");
      out.write("\t\t\t\t        }),\r\n");
      out.write("\t\t\t\t        offsetX: 50\r\n");
      out.write("\t\t\t\t        //offsetY: 20\r\n");
      out.write("\t\t\t\t      })\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tnode.setStyle(ls_stn_style)\r\n");
      out.write("\t\t\t \tnode.setGeometry(geom);\r\n");
      out.write("\t    \t\tnode_layer.getSource().addFeature(node);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//$('#h3_text').html('<h3>수위관측소: 전체</h3>');\r\n");
      out.write("\t\t\t//$(\".tbody_data\").eq(0).html(html);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tselectDetail(current_stn_cd);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectDetail(wlobscd) {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\turl: \"/floodCont/selectBasinLevelDetail.do\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tdata: {'dt': selectIssuetime() + '' + selectIssuehour() + '' + selectIssuemin(), 'wlobscd': wlobscd},\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\tvar color = \"\";\r\n");
      out.write("\t\t\tvar wlobsnm = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar xaxis = new Array();\r\n");
      out.write("\t\t\tvar val = new Array();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar level1_val = '';\r\n");
      out.write("\t\t\tvar level2_val = '';\r\n");
      out.write("\t\t\tvar level3_val = '';\r\n");
      out.write("\t\t\tvar level4_val = '';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(data.dataList.length);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i<data.dataList.length; i++) {\r\n");
      out.write("\t\t\t\tvar geom_trans = ([data.dataList[i].LON, data.dataList[i].LAT]);\r\n");
      out.write("\t\t\t\tvar geom = new ol.geom.Point(geom_trans);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar wl = parseFloat(data.dataList[i].WL);\r\n");
      out.write("\t\t\t\tvar lv1 = parseFloat(data.dataList[i].LV1);\r\n");
      out.write("\t\t\t\tvar lv2 = parseFloat(data.dataList[i].LV2);\r\n");
      out.write("\t\t\t\tvar lv3 = parseFloat(data.dataList[i].LV3);\r\n");
      out.write("\t\t\t\tvar lv4 = parseFloat(data.dataList[i].LV4);\r\n");
      out.write("\t\t\t\twlobsnm = data.dataList[i].WLOBSNM;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar current_grade = '';\r\n");
      out.write("\t\t\t\tvar legend_class = '';\r\n");
      out.write("\t\t\t\tvar legend_name = '';\r\n");
      out.write("\t\t\t\tvar current_color = '';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlevel1_val = lv1;\r\n");
      out.write("\t\t\t\tlevel2_val = lv2;\r\n");
      out.write("\t\t\t\tlevel3_val = lv3;\r\n");
      out.write("\t\t\t\tlevel4_val = lv4;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.dataList.length < 1) {\r\n");
      out.write("\t\t\t\t\txaxis.push(null);\r\n");
      out.write("\t\t\t\t\tval.push(null);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\txaxis.push(data.dataList[i].OBSTM.substr(0, 4) + \".\" + data.dataList[i].OBSTM.substr(4, 2) + '.' + data.dataList[i].OBSTM.substr(6, 2) + ' ' + data.dataList[i].OBSTM.substr(8, 2) + \":\" + data.dataList[i].OBSTM.substr(10, 2));\r\n");
      out.write("\t\t\t\t\tval.push(wl);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(wl == '-999') {\r\n");
      out.write("\t\t\t\t\tcurrent_grade = 'lv-1';\r\n");
      out.write("\t\t\t\t\tlegend_class = 'legend1';\r\n");
      out.write("\t\t\t\t\tlegend_name = '자료없음';\r\n");
      out.write("\t\t\t\t\tcurrent_color = '#777777';\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif(wl < lv2 && wl >= lv1) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv1';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend2';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '관심';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#00B7EE';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl < lv3 && wl >= lv2) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv2';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend3';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '주의';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#ffff00';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl < lv4 && wl >= lv3) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv3';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend4';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '경계';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#BA0469';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(wl >= lv4) {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv4';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend5';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '심각';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#D80012';\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}  else {\r\n");
      out.write("\t\t\t\t\t\tcurrent_grade = 'lv0';\r\n");
      out.write("\t\t\t\t\t\tlegend_class = 'legend1';\r\n");
      out.write("\t\t\t\t\t\tlegend_name = '안전';\r\n");
      out.write("\t\t\t\t\t\tcurrent_color = '#1fbc02';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar geom_trans = ([data.dataList[i].LON, data.dataList[i].LAT]);\r\n");
      out.write("\t\t\t\tvar geom = new ol.geom.Point(geom_trans);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tmarker_layer.getSource().clear();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar node = new ol.Feature({\r\n");
      out.write("\t\t\t        id : data.dataList[i].WLOBSCD,\r\n");
      out.write("\t\t\t        params: {\r\n");
      out.write("\t\t\t            'lat': data.dataList[i].LAT,\r\n");
      out.write("\t\t\t            'lon': data.dataList[i].LON\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t   \t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar ls_stn_style = new ol.style.Style({\r\n");
      out.write("\t\t\t\t    image: new ol.style.Icon(({\r\n");
      out.write("\t\t\t\t    \tanchor: [0.5, 32],\r\n");
      out.write("\t\t\t\t        anchorXUnits: 'fraction',\r\n");
      out.write("\t\t\t\t        anchorYUnits: 'pixels',\r\n");
      out.write("\t\t\t\t        src: '//images/marker_stn.gif'\r\n");
      out.write("\t\t\t\t    }))\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tnode.setGeometry(geom);\r\n");
      out.write("\t\t\t\tnode.setStyle(ls_stn_style);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tmarker_layer.getSource().addFeature(node);\r\n");
      out.write("\t\t\t\tmarker_layer.setZIndex(1);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.dataList.length < 1) {\r\n");
      out.write("\t\t\t\t\thtml += \"<tr class=''>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td colspan='4'>자료없음</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\thtml += \"<tr class=''>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td>\" + data.dataList[i].OBSTM.substr(0, 4) + \".\" + data.dataList[i].OBSTM.substr(4, 2) + '.' + data.dataList[i].OBSTM.substr(6, 2) + ' ' + data.dataList[i].OBSTM.substr(8, 2) + \":\" + data.dataList[i].OBSTM.substr(10, 2) + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td>\" + data.dataList[i].WLOBSNM + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td>\" + data.dataList[i].WL + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td class='\" + legend_class + \"'>\" + legend_name + \"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#h3_text').html('<h3>수위관측소: ' + wlobsnm + '</h3>');\r\n");
      out.write("\t\t\t$(\".tbody_data\").eq(0).html(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#chart_data\").highcharts({\r\n");
      out.write("\t\t\t    chart: {\r\n");
      out.write("\t\t\t        type: \"line\"\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    title: {\r\n");
      out.write("\t\t\t    \ttext : null\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    xAxis: {\r\n");
      out.write("\t\t\t    \ttitle: {\r\n");
      out.write("\t\t\t            text: '시간(분)'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        tickInterval : 4,\r\n");
      out.write("\t\t\t        categories: xaxis\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    plotOptions: {\r\n");
      out.write("\t\t\t        series: {\r\n");
      out.write("\t\t\t            animation: false,\r\n");
      out.write("\t\t\t            marker: {\r\n");
      out.write("\t\t\t                enabled: false\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    credits: {\r\n");
      out.write("\t\t            enabled: false\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t\t    yAxis: [{\r\n");
      out.write("\t\t\t        title: {\r\n");
      out.write("\t\t\t        \ttext: '수위(El.m)'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        labels: {\r\n");
      out.write("\t\t\t            format: '{value:,.2f}'\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        plotLines: [{\r\n");
      out.write("\t\t\t            color: '#00B7EE',\r\n");
      out.write("\t\t\t            width: 2,\r\n");
      out.write("\t\t\t            value: level1_val,\r\n");
      out.write("\t\t\t            dashStyle: 'ShortDot',\r\n");
      out.write("\t\t\t            label: {\r\n");
      out.write("\t\t\t                text: '관심',\r\n");
      out.write("\t\t\t                style: {\r\n");
      out.write("\t\t\t                    color: '#00B7EE',\r\n");
      out.write("\t\t\t                    fontWeight: 'bold'\r\n");
      out.write("\t\t\t                },\r\n");
      out.write("\t\t\t                useHTML: true,\r\n");
      out.write("\t\t\t                verticalAlign: 'top',\r\n");
      out.write("\t\t\t                align: 'right',\r\n");
      out.write("\t\t\t                //textAlign: 'right',\r\n");
      out.write("\t\t\t                rotation: 0,\r\n");
      out.write("\t\t\t                x: -10,\r\n");
      out.write("\t\t\t                y: 15\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            zIndex: 5\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            color: '#5F52A0',\r\n");
      out.write("\t\t\t            width: 2,\r\n");
      out.write("\t\t\t            value: level2_val,\r\n");
      out.write("\t\t\t            dashStyle: 'ShortDot',\r\n");
      out.write("\t\t\t            label: {\r\n");
      out.write("\t\t\t                text: '주의',\r\n");
      out.write("\t\t\t                style: {\r\n");
      out.write("\t\t\t                    color: '#5F52A0',\r\n");
      out.write("\t\t\t                    fontWeight: 'bold'\r\n");
      out.write("\t\t\t                },\r\n");
      out.write("\t\t\t                useHTML: true,\r\n");
      out.write("\t\t\t                verticalAlign: 'top',\r\n");
      out.write("\t\t\t                align: 'right',\r\n");
      out.write("\t\t\t                //textAlign: 'right',\r\n");
      out.write("\t\t\t                rotation: 0,\r\n");
      out.write("\t\t\t                x: -10,\r\n");
      out.write("\t\t\t                y: 15\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            zIndex: 5\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            color: '#BA0469',\r\n");
      out.write("\t\t\t            width: 2,\r\n");
      out.write("\t\t\t            value: level3_val,\r\n");
      out.write("\t\t\t            dashStyle: 'ShortDot',\r\n");
      out.write("\t\t\t            label: {\r\n");
      out.write("\t\t\t                text: '경계',\r\n");
      out.write("\t\t\t                style: {\r\n");
      out.write("\t\t\t                    color: '#BA0469',\r\n");
      out.write("\t\t\t                    fontWeight: 'bold'\r\n");
      out.write("\t\t\t                },\r\n");
      out.write("\t\t\t                useHTML: true,\r\n");
      out.write("\t\t\t                verticalAlign: 'top',\r\n");
      out.write("\t\t\t                align: 'right',\r\n");
      out.write("\t\t\t                //textAlign: 'right',\r\n");
      out.write("\t\t\t                rotation: 0,\r\n");
      out.write("\t\t\t                x: -10,\r\n");
      out.write("\t\t\t                y: 15\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            zIndex: 5\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            color: '#D80012',\r\n");
      out.write("\t\t\t            width: 2,\r\n");
      out.write("\t\t\t            value: level4_val,\r\n");
      out.write("\t\t\t            dashStyle: 'ShortDot',\r\n");
      out.write("\t\t\t            label: {\r\n");
      out.write("\t\t\t                text: '심각',\r\n");
      out.write("\t\t\t                style: {\r\n");
      out.write("\t\t\t                    color: '#D80012',\r\n");
      out.write("\t\t\t                    fontWeight: 'bold'\r\n");
      out.write("\t\t\t                },\r\n");
      out.write("\t\t\t                useHTML: true,\r\n");
      out.write("\t\t\t                verticalAlign: 'top',\r\n");
      out.write("\t\t\t                align: 'right',\r\n");
      out.write("\t\t\t                //textAlign: 'right',\r\n");
      out.write("\t\t\t                rotation: 0,\r\n");
      out.write("\t\t\t                x: -10,\r\n");
      out.write("\t\t\t                y: 15\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            zIndex: 5\r\n");
      out.write("\t\t\t        }]//,\r\n");
      out.write("\t\t\t       \t//max: level4_val + level2_val * 0.01\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    series: [{\r\n");
      out.write("\t\t\t        name: '수위',\r\n");
      out.write("\t\t\t        data: val,\r\n");
      out.write("\t\t\t        lineWidth: 3\r\n");
      out.write("\t\t\t    }],\r\n");
      out.write("\t\t\t    legend: {\r\n");
      out.write("\t\t\t        enabled: false\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t\texporting : {\r\n");
      out.write("\t\t\t\t\tenabled : false,\r\n");
      out.write("\t\t\t\t\tsourceWidth : 1100,\r\n");
      out.write("\t\t\t\t\tsourceHeight : 250,\r\n");
      out.write("\t\t\t\t\tscale : 1\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlang: {\r\n");
      out.write("\t\t\t        noData: \"Nichts zu anzeigen\"\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t\tnoData: {\r\n");
      out.write("\t\t\t        style: {\r\n");
      out.write("\t\t\t            fontWeight: 'bold',\r\n");
      out.write("\t\t\t            fontSize: '15px',\r\n");
      out.write("\t\t\t            color: '#303030'\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).on('click', '.tab li', function() { //top tap only table, gis\r\n");
      out.write("\tvar current_class = $(this).attr('class');\r\n");
      out.write("\t\r\n");
      out.write("\tif(!$(this).hasClass(\"on\")) {\r\n");
      out.write("\t\t$('.tab li').removeClass(\"on\");\r\n");
      out.write("\t\t$('.' + current_class).addClass(\"on\");\r\n");
      out.write("\t\t$('#acc').val(current_class);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tselectData();\r\n");
      out.write("\t\tselectDetail(node);\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(document).on('click', '.tabBttm li', function() { //bottom tab only gis data\r\n");
      out.write("\tvar current_class = $(this).attr('class');\r\n");
      out.write("\t\r\n");
      out.write("\tif(!$(this).hasClass(\"on\")) {\r\n");
      out.write("\t\t$('.tabBttm li').removeClass(\"on\");\r\n");
      out.write("\t\t$('.' + current_class).addClass(\"on\");\r\n");
      out.write("\t\t$('#step').val(current_class);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('.tr_class').removeClass(\"on\");\r\n");
      out.write("\t\t$('.tr_' + current_class).addClass(\"on\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tselectData();\r\n");
      out.write("\t\tselectDetail(node);\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(document).on('change', '#input_hour', function() {\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(document).on('change', '#input_min', function() {\r\n");
      out.write("\tselectData();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" method=\"get\">\r\n");
      out.write("<input type=\"hidden\" id=\"current_input_hour\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueHour}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" id=\"current_input_min\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueMin}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" id=\"issue_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${issueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"container\" class=\"wtrLvl\">\r\n");
      out.write("        <div class=\"submenu\">\r\n");
      out.write("        \t<a href=\"/flood/basinlevel.do\" class=\"on\">하천수위실황</a>\r\n");
      out.write("            <a href=\"/flood/waterlevel.do\">우수관로실황</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"sett\">\r\n");
      out.write("          \t<strong>날짜 선택</strong>\r\n");
      out.write("          \t<input type=\"text\" id=\"input_issuestime\" name=\"\" value=\"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write('년');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write('월');
      out.write(' ');
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("일\"  onfocus=\"javascript:selectFocus(this);\" />\r\n");
      out.write("          \t<select id=\"input_hour\" name=\"\"></select>\r\n");
      out.write("          \t<select id=\"input_min\" name=\"\"></select>\r\n");
      out.write("          \t<a href=\"javascript:selectNow();\"><img src=\"/images/btn_now.gif\" alt=\"Now\"></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"rvrwtLevel\">\r\n");
      out.write("            <div class=\"giswrap\">\r\n");
      out.write("                <div class=\"gisarea\" id=\"map\"></div>\r\n");
      out.write("                <ul class=\"legend\">\r\n");
      out.write("                    <li>안전</li>\r\n");
      out.write("                    <li>관심</li>\r\n");
      out.write("                    <li>주의</li>\r\n");
      out.write("                    <li>경계</li>\r\n");
      out.write("                    <li>심각</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div id=\"popup\" class=\"ol-popup\">\r\n");
      out.write("\t\t\t\t<div id=\"popup-content\"></div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"tblwrap\">\r\n");
      out.write("                <div id=\"h3_text\"><h3>관측지점: 전체</h3></div>\r\n");
      out.write("                <div class=\"thead\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <col width=\"118\" />\r\n");
      out.write("                        <col width=\"82\" />\r\n");
      out.write("                        <col width=\"80\" />\r\n");
      out.write("                        <col width=\"*\" />\r\n");
      out.write("                        <tbody><tr>\r\n");
      out.write("                            <td scope=\"col\">시간</td>\r\n");
      out.write("                            <td scope=\"col\">관측지점</td>\r\n");
      out.write("                            <td scope=\"col\">수위</td>\r\n");
      out.write("                            <td scope=\"col\">예경보</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </tbody></table>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"scroll\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <col width=\"118\" />\r\n");
      out.write("                        <col width=\"82\" />\r\n");
      out.write("                        <col width=\"80\" />\r\n");
      out.write("                        <col width=\"*\" />\r\n");
      out.write("                        <tbody class=\"tbody_data\">\r\n");
      out.write("                        \t<!--\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>2020.09.17 14:00</td>\r\n");
      out.write("                                <td>aB123</td>\r\n");
      out.write("                                <td>12.3mm</td>\r\n");
      out.write("                                <td class=\"legend1\">안전</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>2020.09.17 14:00</td>\r\n");
      out.write("                                <td>aB123</td>\r\n");
      out.write("                                <td>12.3mm</td>\r\n");
      out.write("                                <td class=\"legend2\">관심</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>2020.09.17 14:00</td>\r\n");
      out.write("                                <td>aB123</td>\r\n");
      out.write("                                <td>12.3mm</td>\r\n");
      out.write("                                <td class=\"legend3\">주의</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>2020.09.17 14:00</td>\r\n");
      out.write("                                <td>aB123</td>\r\n");
      out.write("                                <td>12.3mm</td>\r\n");
      out.write("                                <td class=\"legend4\">경계</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>2020.09.17 14:00</td>\r\n");
      out.write("                                <td>aB123</td>\r\n");
      out.write("                                <td>12.3mm</td>\r\n");
      out.write("                                <td class=\"legend5\">심각</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            <tr><td>2020.09.17 14:00</td><td>aB123</td><td>12.3mm</td><td>안전</td></tr>\r\n");
      out.write("                            -->\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"wthrRprt\">\r\n");
      out.write("                <div class=\"imgwrap\">\r\n");
      out.write("                    <p class=\"tit\">기상특보</p>\r\n");
      out.write("                    <p class=\"txt\" id=\"kma_txt\"></p>\r\n");
      out.write("                    <div class=\"con con1\"><img id=\"image_path\" src=\"\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"crtwrap\">\r\n");
      out.write("                <div class=\"cnt\" id=\"chart_data\">\r\n");
      out.write("<!--                    <img src=\"/images/samp_graph.gif\" alt=\"Chart Area\" height=\"307\" />-->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("    \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/include/common_footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/jsp/main/05/basinlevel.jsp(630,67) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 0, 4)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/jsp/main/05/basinlevel.jsp(630,119) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 4, 6)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/jsp/main/05/basinlevel.jsp(630,171) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(issueDate, 6, 8)}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }
}
